{"version":3,"file":"static/js/790.701f3101.chunk.js","mappings":"uQAESA,EAAU,mCACVC,EAAW,gCAGLC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAAkCC,GAAlC,gGAEuBC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BE,EAA9B,oBAAiDH,EAAjD,oBAFvB,cAEUK,EAFV,yBAGgBA,GAHhB,sCAMSC,QAAQC,IAAI,KAAMC,SACZ,IAAIC,MAAM,KAAMD,SAP/B,wFAWA,MAdG,SAGYN,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,ECLf,GAAgB,aAAe,mCAAmC,YAAc,kCAAkC,aAAe,mCAAmC,YAAc,kCAAkC,iBAAmB,uCAAuC,sBAAwB,4CAA4C,iBAAmB,uCAAuC,WAAa,kC,SC6EzZ,EAxEwB,WAAO,IAAD,IACnBC,GAAYO,EAAAA,EAAAA,MAAZP,QACR,GAAoCQ,EAAAA,EAAAA,UAAS,CAAC,GAA9C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAoBC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,KAgBzD,IAdAC,EAAAA,EAAAA,YAAU,WACPT,EAAU,YACV,iBAAC,8FACQb,EAAkBC,GACpBsB,MAAK,SAAAC,GACHb,EAAca,EAAMrB,MACpBU,EAAU,OACZ,IACAY,OAAM,SAAAX,GACJC,EAASD,EACX,IARN,0CAAD,EAUF,GAAE,CAACb,IAEDS,EAAWgB,GACd,OACG,gCACe,YAAXd,IAAwB,SAACe,EAAA,EAAD,IACxBb,IAAS,yBAAK,uCACd,SAAC,KAAD,CAAMc,GAAIV,EAAkBW,QAC1BC,UAAWC,EAAAA,WADb,SAEA,aACD,iBAAKD,UAAWC,EAAAA,aAAhB,WACG,gBACGD,UAAWC,EAAAA,gBACXC,IAAG,yCAAoCtB,EAAWuB,aAAeC,IAAKxB,EAAWyB,SACpF,gBAAIL,UAAWC,EAAAA,YAAf,WACG,yBACG,cAAGD,UAAWC,EAAAA,aAAd,mBAAoCrB,EAAWyB,MAA/C,aAAyDzB,EAAW0B,aAAaC,MAAM,EAAE,GAAzF,UAEH,yBACG,eAAGP,UAAWC,EAAAA,YAAd,UAA+B,gBAA/B,UAAgDO,KAAKC,MAA8B,GAAxB7B,EAAW8B,cAAtE,WAEH,yBACG,eAAGV,UAAWC,EAAAA,aAAd,UAAgC,eAAW,mBACxC,iBAAMD,UAAWC,EAAAA,YAAjB,mBAAsCrB,EAAW+B,kBAGvD,yBACG,eAAGX,UAAWC,EAAAA,aAAd,UAAgC,aAAS,kBACrCrB,EAAWgC,OAAOC,KAAI,SAACC,GACxB,OAAO,kBAAqBd,UAAWC,EAAAA,YAAhC,UAAiD,IAAjD,UAAsDa,EAAMC,MAAO,MAAxDD,EAAMlB,GAC1B,gBAMV,eAAII,UAAWC,EAAAA,iBAAf,SAAqC,4BACrC,gBAAID,UAAWC,EAAAA,sBAAf,WACG,yBACG,SAAC,KAAD,CAAMH,GAAG,OAAOE,UAAWC,EAAAA,iBAA3B,SAAiD,YAEpD,yBACG,SAAC,KAAD,CAAMH,GAAG,UAAUE,UAAWC,EAAAA,iBAA9B,SAAoD,kBAG7D,SAAC,EAAAe,SAAD,CAAUC,UAAU,SAACpB,EAAA,EAAD,IAApB,UACE,SAAC,KAAD,QAIP,C","sources":["services/fetchDetails.js","webpack://goit-react-hw-05-movies/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\n\n   const API_KEY = '80b919ebaba440b66b502ccefd484b0d';\n   const BASE_URL = 'https://api.themoviedb.org/3/';\n\n\nasync function fetchMovieDetails (movieId) {\n   try {\n    const data = await axios.get(`${BASE_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`)\n         return data;\n }   \n      catch(error) {\n         console.log(error.message);\n         throw new Error(error.message);\n      };\n};\n \nexport default fetchMovieDetails;","// extracted by mini-css-extract-plugin\nexport default {\"movieDetails\":\"MovieDetails_movieDetails__EbgQo\",\"detailsList\":\"MovieDetails_detailsList__c-mmj\",\"detailsTitle\":\"MovieDetails_detailsTitle__aL4kz\",\"detailsInfo\":\"MovieDetails_detailsInfo__YvpVP\",\"movieDetailsInfo\":\"MovieDetails_movieDetailsInfo__KY5s2\",\"movieDetailsInfoLinks\":\"MovieDetails_movieDetailsInfoLinks__UUh-m\",\"movieDetailsLink\":\"MovieDetails_movieDetailsLink__Bth2S\",\"goBackLink\":\"MovieDetails_goBackLink__0L6Dl\"};","import { React, useEffect, useState, useRef, Suspense } from \"react\";\nimport { Link, Outlet, useParams, useLocation } from \"react-router-dom\";\nimport { Loader } from 'components/Loader/Loader';\nimport fetchMovieDetails from \"../../services/fetchDetails\";\nimport css from 'pages/MovieDetails/MovieDetails.module.css';\n\n   const MovieDetails = () => {\n   const { movieId } = useParams();\n   const [movDetails, setMovDetails] = useState({});\n   const [status, setStatus] = useState('idle');\n   const [error, setError] = useState(null);\n   const location = useLocation();\n   const goBackLocationRef = useRef(location.state?.from ?? '/');\n\n   useEffect(() => {\n      setStatus('pending');\n      (async () => {\n         await fetchMovieDetails(movieId)\n            .then(movie => {\n               setMovDetails(movie.data);\n               setStatus('idle');\n            })\n            .catch(error => {\n               setError(error);\n            });\n      })()\n   }, [movieId]);   \n    \n   if(movDetails.id)\n   return (\n      <>\n         {status === 'pending' && <Loader/> }\n         {error && <div>Something wents wrong. Try again.</div>}\n         {<Link to={goBackLocationRef.current}\n            className={css.goBackLink}\n         >Go back</Link>}\n         <div className={css.movieDetails}>\n            <img\n               className={css.imageMovDetails}\n               src={`https://image.tmdb.org/t/p/w500${movDetails.poster_path}`} alt={movDetails.title} />\n            <ul className={css.detailsList}>\n               <li>\n                  <p className={css.detailsTitle}>{`${movDetails.title} (${movDetails.release_date.slice(0,4)})`}</p>                  \n               </li>\n               <li>\n                  <p className={css.detailsInfo}> User Score: {`${Math.round(movDetails.vote_average*10)}%`}</p>                  \n               </li>\n               <li>\n                  <p className={css.detailsTitle}> Overview: <br />\n                     <span className={css.detailsInfo}>{`${movDetails.overview}`}</span>\n                  </p>                  \n               </li>\n               <li>\n                  <p className={css.detailsTitle}> Genres: <br />\n                     {movDetails.genres.map((genre) => {\n                     return <span key={genre.id} className={css.detailsInfo}> {`${genre.name}`} </span>\n                  })}\n                  </p>\n                  \n               </li>\n            </ul>\n         </div>\n         <h2 className={css.movieDetailsInfo}>Additional information</h2>\n         <ul className={css.movieDetailsInfoLinks}>\n            <li>\n               <Link to='cast' className={css.movieDetailsLink}>Cast</Link>\n            </li>\n            <li>\n               <Link to='reviews' className={css.movieDetailsLink}>Reviews</Link>\n            </li>\n         </ul>\n      <Suspense fallback={<Loader/>}>\n        <Outlet />\n         </Suspense>\n      </>\n   );\n}; \n\nexport default MovieDetails;"],"names":["API_KEY","BASE_URL","fetchMovieDetails","movieId","axios","data","console","log","message","Error","useParams","useState","movDetails","setMovDetails","status","setStatus","error","setError","location","useLocation","goBackLocationRef","useRef","state","from","useEffect","then","movie","catch","id","Loader","to","current","className","css","src","poster_path","alt","title","release_date","slice","Math","round","vote_average","overview","genres","map","genre","name","Suspense","fallback"],"sourceRoot":""}