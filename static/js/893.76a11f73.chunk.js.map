{"version":3,"file":"static/js/893.76a11f73.chunk.js","mappings":"sPACA,EAA2B,uBAA3B,EAA6D,uB,SCCpDA,EAAU,mCACVC,EAAW,gCAGLC,SAAAA,IAAf,OAAeA,GAAAA,EAAAA,EAAAA,GAAAA,IAAAA,MAAf,WAA+BC,GAA/B,gGAEuBC,EAAAA,EAAAA,IAAA,UAAaH,EAAb,iBAA8BE,EAA9B,4BAAyDH,EAAzD,oBAFvB,cAEUK,EAFV,yBAIaA,GAJb,sCAOSC,QAAQC,IAAI,KAAMC,SACZ,IAAIC,MAAM,KAAMD,SAR/B,wFAgBA,MAnBG,SAGYN,GAAAA,OAAAA,EAAAA,MAAAA,KAAAA,UAAAA,E,SC8Cf,EA9Ca,WACV,IAAQC,GAAYO,EAAAA,EAAAA,MAAZP,QACR,GAA8BQ,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAgBA,IAdAC,EAAAA,EAAAA,YAAU,WACPH,EAAU,YACV,iBAAC,8FACQb,EAAeC,GACjBgB,MAAK,SAAAC,GACHP,EAAWO,EAAMf,KAAKgB,MACtBN,EAAU,OACZ,IACAO,OAAM,SAAAN,GACJC,EAASD,EACX,IARN,0CAAD,EAUF,GAAE,CAACb,IAEAS,EAAQ,GACT,OACA,gCACe,YAAXE,IAAwB,SAACS,EAAA,EAAD,IACrBP,IAAS,yBAAK,sCACdJ,EAAQY,KAAI,YAA4C,IAAzCC,EAAwC,EAAxCA,UAAWC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,aAAcC,EAAS,EAATA,GAC5C,OAAID,GACM,iBAEPE,UAAWC,EAFJ,WAGJ,gBACGC,IAAG,yCAAoCJ,GAAgBK,IAAKN,EAAMO,MAAM,SAC3E,iBAAMJ,UAAWC,EAAjB,mBAAmCJ,KAAc,KAAC,mBAClD,kBAAMG,UAAWC,EAAjB,UAA+B,cAA/B,UAA8CL,QALzCG,IAQH,4BACF,yBAAK,mBAAoB,KAAC,mBAC1B,iBAAMC,UAAWC,EAAjB,mBAAmCJ,KAAc,KAAC,mBACrD,kBAAMG,UAAWC,EAAjB,UAA+B,cAA/B,UAA8CL,QAH/BG,EAKpB,MAGZ,C","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","services/fetchCast.js","components/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castItem\":\"Cast_castItem__-Jcfe\",\"castInfo\":\"Cast_castInfo__fGvyp\"};","import axios from 'axios';\n\n   const API_KEY = '80b919ebaba440b66b502ccefd484b0d';\n   const BASE_URL = 'https://api.themoviedb.org/3/';\n\n\nasync function fetchMovieCast (movieId) {\n   try {\n    const data = await axios.get(`${BASE_URL}movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`)\n\n      return data;\n }   \n      catch(error) {\n         console.log(error.message);\n         throw new Error(error.message);\n      };\n};\n\n// fetchMovieDetails(603692);\n                  // console.log(fetchMovieCast(603692));\n\n\nexport default fetchMovieCast;\n\n","import { React, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Loader } from 'components/Loader/Loader';\nimport css from 'components/Cast/Cast.module.css';\nimport fetchMovieCast from \"../../services/fetchCast\";\n\nconst Cast = () => {\n   const { movieId } = useParams();\n   const [movCast, setMovCast] = useState({});\n   const [status, setStatus] = useState('idle');\n   const [error, setError] = useState(null);\n\n   useEffect(() => {\n      setStatus('pending');\n      (async () => {\n         await fetchMovieCast(movieId)\n            .then(movie => {\n               setMovCast(movie.data.cast);\n               setStatus('idle');\n            })\n            .catch(error => {\n               setError(error);\n            });\n      })()\n   }, [movieId]);\n\n   if (movCast[0])\n      return (\n      <>\n         {status === 'pending' && <Loader/> }\n            {error && <div>Something wents wrong. Try again.</div>}\n            {movCast.map(({ character, name, profile_path, id }) => {\n               if (profile_path) {\n                  return <div\n                     key={id}\n                  className={css.castItem}>\n                     <img\n                        src={`https://image.tmdb.org/t/p/w500${profile_path}`} alt={name} width=\"200\"/>\n                     <span className={css.castInfo}>{`${name}`}</span> <br />\n                     <span className={css.castInfo}>Character: {`${character}`}</span> \n                  </div>\n               }\n               return  <div key={id}>\n                     <div>---No photo---</div> <br />\n                     <span className={css.castInfo}>{`${name}`}</span> <br />\n                  <span className={css.castInfo}>Character: {`${character}`}</span>                   \n                  </div>                    \n            })}\n         </>\n      )\n};\n\nexport default Cast;\n"],"names":["API_KEY","BASE_URL","fetchMovieCast","movieId","axios","data","console","log","message","Error","useParams","useState","movCast","setMovCast","status","setStatus","error","setError","useEffect","then","movie","cast","catch","Loader","map","character","name","profile_path","id","className","css","src","alt","width"],"sourceRoot":""}